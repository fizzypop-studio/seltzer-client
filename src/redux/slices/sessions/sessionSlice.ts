import { createSlice } from '@reduxjs/toolkit';

export interface User {
	id?: string;
	email?: string;
	first_name?: string;
	last_name?: string;
	role?: string;
	createdAt?: string;
	token?: string;
}

interface AuthState {
	currentUser?: User;
	loading: boolean;
	error: boolean;
	errorMessages: string[];
	accessToken?: string;
	refreshToken?: string | null;
	expiresIn?: number;
	tokenType?: string;
	currentRoute?: string;
}

const initialState: AuthState = {
	currentUser: {
		id: '1',
		first_name: 'Dwight',
		last_name: 'Schrute',
		email: 'dwight@dundermifflin.com',
		role: 'user',
		createdAt: '12/22/1991',
	},
	loading: false,
	error: false,
	errorMessages: [],
	accessToken: 'abcdefghijklmnopqrstuvwxyz',
	refreshToken: 'abcdefghijklmnopqrstuvwxyz',
	expiresIn: undefined,
	tokenType: undefined,
};

export const sessionSlice = createSlice({
	name: 'session',
	initialState,
	// The `reducers` field lets us define reducers and generate associated actions
	reducers: {
		resetErrorState: (state) => {
			state.error = false;
			state.errorMessages = [];
		},
	},
	// The `extraReducers` field lets the slice handle actions defined elsewhere,
	// including actions generated by createAsyncThunk or in other slices.
	extraReducers: () => {},
});

export const { resetErrorState } = sessionSlice.actions;

export default sessionSlice.reducer;
